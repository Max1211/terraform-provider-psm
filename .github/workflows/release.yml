name: Release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch:
permissions:
  contents: write
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    environment: tf_provider_psm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: '.go-version'
          check-latest: true

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      # Use existing terraform-registry-manifest.json file
      - name: Check for terraform-registry-manifest.json
        run: |
          if [ ! -f terraform-registry-manifest.json ]; then
            echo "terraform-registry-manifest.json not found in repository"
            exit 1
          fi

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

  release-notes:
    runs-on: ubuntu-latest
    environment: tf_provider_psm
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate Release Notes
        run: |
          if [ -f CHANGELOG.md ]; then
            export PREV_TAG=$(git tag --list 'v*' --sort=-version:refname | head -n 2 | tail -n 1)
            export PREV_VERSION=${PREV_TAG//v}
            sed -n -e "1{/# /d;}" -e "2{/^$/d;}" -e "/# $PREV_VERSION/q;p" CHANGELOG.md > release-notes.txt
          else
            echo "Release version: ${{ github.ref_name }}" > release-notes.txt
            git log --pretty=format:"* %s (%h)" $(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))..HEAD >> release-notes.txt
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes.txt
          retention-days: 1